/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.CT_Hoa_DonBUS;
import BUS.HoaDonBUS;
import BUS.ShowSPBUS;
import DTO.CT_Hoa_DonDTO;
import DTO.HoaDonDTO;
import DTO.SanPhamDTO;
import SUPPORT.TimMAHD;
import com.toedter.calendar.JCalendar;
import com.toedter.calendar.JDateChooser;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class HoaDon_CTHoaDon_GUI extends javax.swing.JFrame {
    DefaultTableModel mode = new DefaultTableModel();
    DefaultTableModel mode1 = new DefaultTableModel();
    DefaultTableModel mode2 = new DefaultTableModel();
    HoaDonBUS bus= new HoaDonBUS();
    ShowSPBUS bus2= new ShowSPBUS();
    CT_Hoa_DonBUS bus1= new CT_Hoa_DonBUS();
    private int i=28;
    
    
    /**
     * Creates new form HoaDon_CTHoaDon_GUI
     */
    public HoaDon_CTHoaDon_GUI() {
        
        try {
            UIManager.setLookAndFeel(new com.jtattoo.plaf.graphite.GraphiteLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(HoaDon_CTHoaDon_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        this.setLocationRelativeTo(null);
        mode= (DefaultTableModel) tbl1.getModel();
        mode1= (DefaultTableModel) tbl2.getModel();
        mode2= (DefaultTableModel) table.getModel();
        
        docHD();
        //docCTHD();
        loadCb();
        disabledHD();
        
        
        disabledCTHD();
        showsp();
        tangmahd();
    }
    
   public void tangmahd(){
        int a= Integer.parseInt("00");
        String t="HD"+a+i;
        txMahd.setText(t);
    }
    
   public void disabledHD(){
        txMahd.setEnabled(true);
        cbMakm.setEnabled(false);
        txTongGiam.setEnabled(false);
        txTongTien.setEnabled(false);
        txTongGiam.setText("0");
        txTongTien.setText("0");
    }
   
    public void disabledCTHD(){
        txMahd1.setEnabled(false);
        txMasp1.setEnabled(false);
        txgg.setEnabled(false);
    }
   
   public void reset(){
       txMahd.setEnabled(true);
        cbMakm.setEnabled(false);
        txTongGiam.setEnabled(false);
        txTongTien.setEnabled(false);
        txTongGiam.setText("0");
        txTongTien.setText("0");
        btnThem.setEnabled(true);
        txDate.setDate(null);
        cbMaNV.setSelectedIndex(0);
        cbMakm.setSelectedIndex(0);
   }
    
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        p1 = new javax.swing.JPanel();
        scr1 = new javax.swing.JScrollPane();
        pn1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        p2 = new javax.swing.JPanel();
        lbMahd = new javax.swing.JLabel();
        txMahd = new javax.swing.JTextField();
        lbNgay = new javax.swing.JLabel();
        txDate = new com.toedter.calendar.JDateChooser();
        lbMakm = new javax.swing.JLabel();
        cbMakm = new javax.swing.JComboBox<>();
        lbManv = new javax.swing.JLabel();
        cbMaNV = new javax.swing.JComboBox<>();
        lbMakh = new javax.swing.JLabel();
        cbMakh = new javax.swing.JComboBox<>();
        lbTiengiam = new javax.swing.JLabel();
        txTongGiam = new javax.swing.JTextField();
        lbTongTien = new javax.swing.JLabel();
        txTongTien = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnShow = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        lbCthd = new javax.swing.JLabel();
        p4 = new javax.swing.JPanel();
        lbMahd1 = new javax.swing.JLabel();
        lbMaSP = new javax.swing.JLabel();
        lbSL = new javax.swing.JLabel();
        txSL = new javax.swing.JTextField();
        lbDG = new javax.swing.JLabel();
        txDG = new javax.swing.JTextField();
        lbTT = new javax.swing.JLabel();
        txTT = new javax.swing.JTextField();
        lbGG = new javax.swing.JLabel();
        txgg = new javax.swing.JTextField();
        txMahd1 = new javax.swing.JTextField();
        txMasp1 = new javax.swing.JTextField();
        btnShowsp = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl2 = new javax.swing.JTable();
        btnShow1 = new javax.swing.JButton();
        btnThem1 = new javax.swing.JButton();
        btnSua1 = new javax.swing.JButton();
        btnReset1 = new javax.swing.JButton();
        mnBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        mnTim = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        jMenu3.setText("File");
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar1.add(jMenu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Hóa đơn_cthoadon");

        p1.setBackground(new java.awt.Color(255, 255, 255));

        scr1.setBackground(new java.awt.Color(255, 255, 255));

        pn1.setBackground(new java.awt.Color(255, 255, 255));
        pn1.setPreferredSize(new java.awt.Dimension(980, 774));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HÓA ĐƠN");

        tbl1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Ngày", "Mã khuyến mãi", "Mã nhân viên", "Mã khách hàng", "Tổng tiền giảm", "Tổng tiền", "Sau khi giảm"
            }
        ));
        tbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl1);

        p2.setBackground(new java.awt.Color(255, 255, 255));
        p2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        lbMahd.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbMahd.setText("Mã hóa đơn :");

        txMahd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txMahdKeyReleased(evt);
            }
        });

        lbNgay.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbNgay.setText("Ngày :");

        lbMakm.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbMakm.setText("Mã khuyến mãi :");

        cbMakm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "null", "KMHD012020", "KMHD022020", "KMHD032020" }));

        lbManv.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbManv.setText("Mã nhân viên :");

        cbMaNV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lbMakh.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbMakh.setText("Mã khách hàng :");

        cbMakh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lbTiengiam.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbTiengiam.setText("Tổng tiền giảm :");

        lbTongTien.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbTongTien.setText("Tổng tiền :");

        javax.swing.GroupLayout p2Layout = new javax.swing.GroupLayout(p2);
        p2.setLayout(p2Layout);
        p2Layout.setHorizontalGroup(
            p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbNgay)
                    .addComponent(lbMahd))
                .addGap(18, 18, 18)
                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txMahd, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txDate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbMakm)
                    .addComponent(lbManv))
                .addGap(18, 18, 18)
                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p2Layout.createSequentialGroup()
                        .addComponent(cbMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbMakh)
                        .addGap(18, 18, 18)
                        .addComponent(cbMakh, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbMakm, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTongTien)
                    .addComponent(lbTiengiam))
                .addGap(18, 18, 18)
                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txTongGiam, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        p2Layout.setVerticalGroup(
            p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbMahd)
                            .addComponent(txMahd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbManv)
                            .addComponent(cbMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbMakh)
                            .addComponent(cbMakh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbMakm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbMakm))
                                .addComponent(lbNgay, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(txDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(101, 101, 101))
                    .addGroup(p2Layout.createSequentialGroup()
                        .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTiengiam)
                            .addComponent(txTongGiam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTongTien))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-insert-row-25.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-update-25.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnShow.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnShow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-eye-checked-25.png"))); // NOI18N
        btnShow.setText("Hiển thị");
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-reset-25.png"))); // NOI18N
        btnReset.setText("Đặt lại");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        lbCthd.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbCthd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCthd.setText("CHI TIẾT HÓA ĐƠN");

        p4.setBackground(new java.awt.Color(255, 255, 255));
        p4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(51, 51, 51))); // NOI18N

        lbMahd1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbMahd1.setText("Mã hóa đơn :");

        lbMaSP.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbMaSP.setText("Mã sản phẩm :");

        lbSL.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbSL.setText("Số lượng :");

        txSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txSLActionPerformed(evt);
            }
        });
        txSL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txSLKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txSLKeyReleased(evt);
            }
        });

        lbDG.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbDG.setText("Đơn giá :");

        lbTT.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbTT.setText("Thành tiền :");

        txTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txTTActionPerformed(evt);
            }
        });

        lbGG.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbGG.setText("Giảm giá :");

        txMahd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMahd1ActionPerformed(evt);
            }
        });

        txMasp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMasp1ActionPerformed(evt);
            }
        });

        btnShowsp.setText("...");
        btnShowsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowspActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout p4Layout = new javax.swing.GroupLayout(p4);
        p4.setLayout(p4Layout);
        p4Layout.setHorizontalGroup(
            p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbMaSP)
                    .addComponent(lbDG)
                    .addComponent(lbMahd1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txMahd1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txDG, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(p4Layout.createSequentialGroup()
                            .addComponent(txMasp1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnShowsp, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))))
                .addGap(50, 50, 50)
                .addGroup(p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p4Layout.createSequentialGroup()
                        .addComponent(lbSL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txSL, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p4Layout.createSequentialGroup()
                        .addComponent(lbTT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txTT, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p4Layout.createSequentialGroup()
                        .addComponent(lbGG)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txgg, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        p4Layout.setVerticalGroup(
            p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMahd1)
                    .addComponent(txMahd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbSL)
                    .addComponent(txSL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbMaSP)
                        .addComponent(btnShowsp)
                        .addComponent(lbTT)
                        .addComponent(txTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txMasp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txDG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbDG))
                    .addGroup(p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txgg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbGG)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        table.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Đơn giá"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(table);

        tbl2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tbl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Mã sản phẩm", "Số lượng", "Đơn giá", "Thành tiền", "Giảm giá"
            }
        ));
        tbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl2);

        btnShow1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnShow1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-eye-checked-25.png"))); // NOI18N
        btnShow1.setText("Hiển thị");

        btnThem1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnThem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-insert-row-25.png"))); // NOI18N
        btnThem1.setText("Thêm");
        btnThem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem1ActionPerformed(evt);
            }
        });

        btnSua1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSua1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-update-25.png"))); // NOI18N
        btnSua1.setText("Sửa");
        btnSua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSua1ActionPerformed(evt);
            }
        });

        btnReset1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnReset1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-reset-25.png"))); // NOI18N
        btnReset1.setText("Đặt lại");

        javax.swing.GroupLayout pn1Layout = new javax.swing.GroupLayout(pn1);
        pn1.setLayout(pn1Layout);
        pn1Layout.setHorizontalGroup(
            pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn1Layout.createSequentialGroup()
                        .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(p2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(pn1Layout.createSequentialGroup()
                                    .addComponent(p4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lbCthd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 935, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 935, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(35, Short.MAX_VALUE))
                    .addGroup(pn1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnShow, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115)
                .addComponent(btnSua1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReset1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127)
                .addComponent(btnShow1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );
        pn1Layout.setVerticalGroup(
            pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnReset)
                    .addComponent(btnShow))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbCthd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(p4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnShow1)
                    .addComponent(btnThem1)
                    .addComponent(btnSua1)
                    .addComponent(btnReset1))
                .addContainerGap(90, Short.MAX_VALUE))
        );

        scr1.setViewportView(pn1);

        javax.swing.GroupLayout p1Layout = new javax.swing.GroupLayout(p1);
        p1.setLayout(p1Layout);
        p1Layout.setHorizontalGroup(
            p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scr1, javax.swing.GroupLayout.PREFERRED_SIZE, 979, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        p1Layout.setVerticalGroup(
            p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scr1, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jMenu1.setText("File");
        mnBar1.add(jMenu1);

        jMenu2.setText("Edit");
        mnBar1.add(jMenu2);

        mnTim.setText("Tìm kiếm");

        jMenuItem2.setText("Tìm kiếm mã hóa đơn");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        mnTim.add(jMenuItem2);

        jMenuItem1.setText("Tìm kiếm theo tổng tiền");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mnTim.add(jMenuItem1);

        jMenuItem3.setText("Tìm kiếm theo ngày");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        mnTim.add(jMenuItem3);

        mnBar1.add(mnTim);

        setJMenuBar(mnBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //set mã hóa đơn ở chi tiết hóa đơn
    public void setMa(){
        txMahd1.setText(tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 0).toString());
    }
    private void tbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseClicked
        // TODO add your handling code here:
        int i=tbl1.getSelectedRow();
        if(i>=0){
            txMahd.setText(tbl1.getModel().getValueAt(i, 0).toString());
            try {
                txDate.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(tbl1.getModel().getValueAt(i, 1)+""));
            } catch (ParseException ex) {
                ex.printStackTrace();
            }
            cbMakm.setSelectedItem(tbl1.getModel().getValueAt(i, 2).toString());
            cbMaNV.setSelectedItem(tbl1.getModel().getValueAt(i, 3).toString());
            cbMakh.setSelectedItem(tbl1.getModel().getValueAt(i, 4).toString());
            txTongGiam.setText(tbl1.getModel().getValueAt(i, 5).toString());
            txTongTien.setText(tbl1.getModel().getValueAt(i, 6).toString());
        }
       //chọn bảng hóa đơn show xuống chi tiết hóa đơn
        doctbcthd();
        //set mã hóa đơn ở chi tiết hóa đơn
        setMa();
        btnThem.setEnabled(false);
    }//GEN-LAST:event_tbl1MouseClicked
        
    private void tbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl2MouseClicked
        // TODO add your handling code here:
        int i= tbl2.getSelectedRow();
        if(i>=0){
            txMahd1.setText(tbl2.getModel().getValueAt(i, 0).toString());
            txMasp1.setText(tbl2.getModel().getValueAt(i, 1).toString());
            txSL.setText(tbl2.getModel().getValueAt(i, 2).toString());
            txDG.setText(tbl2.getModel().getValueAt(i, 3).toString());
            txTT.setText(tbl2.getModel().getValueAt(i, 4).toString());
            txgg.setText(tbl2.getModel().getValueAt(i, 5).toString());
        }
       
    }//GEN-LAST:event_tbl2MouseClicked

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

     public boolean kt(){
        boolean check=true;
        if(txMahd.getText().length()==0){
            JOptionPane.showMessageDialog(rootPane, "Mã hóa đơn còn trống");
            check= false;
        }
        
       return check;
    }
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        int flag=1,flag2=1;
        HoaDonDTO hd = new HoaDonDTO();
        if(kt()){
        hd.setMaHD(txMahd.getText());
            try {
                hd.setNgay(new SimpleDateFormat("yyyy-MM-dd").format(txDate.getDate()));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn ngày");
                flag=0;
            }
        hd.setMaKM((String) cbMakm.getSelectedItem());
        hd.setMaNV((String) cbMaNV.getSelectedItem());
        hd.setMaKH((String) cbMakh.getSelectedItem());
        hd.setTongTien(Float.parseFloat(txTongTien.getText()));
        hd.setTongGiam(Float.parseFloat(txTongGiam.getText()));
        hd.setSauGiam(0);
        
        for(int i=0;i<bus.dshd.size();i++){
            if(bus.dshd.get(i).getMaHD().trim().equals(txMahd.getText().trim())){
                flag2=0;
                JOptionPane.showMessageDialog(rootPane, "Trùng mã hóa đơn");
                txMahd.setText("");
                txMahd.requestFocus();
                break;
            }
            else
            {
                flag2=1;
            }
        }
        if(flag==1 && flag2==1){
        int res=JOptionPane.showConfirmDialog(rootPane, "Bạn muốn thêm hóa đơn này ?");
        if(res==JOptionPane.YES_OPTION){
        if(bus.themhd(hd)){
            showResult();
            JOptionPane.showMessageDialog(rootPane, "Thêm thành công");
        }
        }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Thêm thất bại");
        }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Thêm thất bại");
        }
         i++;
         tangmahd();
    }//GEN-LAST:event_btnThemActionPerformed

    private void txMasp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMasp1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txMasp1ActionPerformed

   
    private void btnShowspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowspActionPerformed
        // TODO add your handling code here:
        ShowSP showsp= new ShowSP();
        showsp.setVisible(true);
    }//GEN-LAST:event_btnShowspActionPerformed

    private void txMahd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMahd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txMahd1ActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
       
       int i= table.getSelectedRow();
        if(i>=0){
            txMasp1.setText(table.getModel().getValueAt(i,0).toString());
            txDG.setText(table.getModel().getValueAt(i, 3).toString());
        }
        setMakh();
         
       
    }//GEN-LAST:event_tableMouseClicked

    public boolean kt1(){
         boolean check=true;
        if(txSL.getText().length()==0){
            JOptionPane.showMessageDialog(rootPane, "Số lượng còn trống");
            check= false;
        }
        
        if(txTT.getText().length()==0){
            JOptionPane.showMessageDialog(rootPane, "Thành tiền còn trống");
            check= false;
        }
        
       return check;
    }
    
    private void btnThem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem1ActionPerformed
        // TODO add your handling code here:
       int flag1=1,flag2=1;
        CT_Hoa_DonDTO cthd = new CT_Hoa_DonDTO();
        if(kt1()){
       cthd.setMaHD(txMahd1.getText());
       cthd.setMaSP(txMasp1.getText());
       cthd.setDonGia(Float.parseFloat(txDG.getText()));
            try {
                 cthd.setSL(Integer.parseInt(txSL.getText()));
            } catch (Exception e) {
                flag2=0;
                JOptionPane.showMessageDialog(rootPane, "Số lượng phải là số");
            }
       cthd.setThanhTien(Float.parseFloat(txTT.getText()));
       cthd.setGiamGia(Float.parseFloat(txgg.getText()));
       
        if(flag1==1 && flag2==1){
        int res=JOptionPane.showConfirmDialog(rootPane, "Bạn muốn thêm chi tiết hóa đơn này ?");
        if(res==JOptionPane.YES_OPTION){
        if(bus1.themhd(cthd)){
            showResult1();
            JOptionPane.showMessageDialog(rootPane, "Thêm thành công");
            suaTT();
            suaSL();
            suaTTG();
            SuaMakm();
            suaTSG();
        }
        }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Thêm thất bại");
        }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Thêm thất bại");
        }
         
    }//GEN-LAST:event_btnThem1ActionPerformed

   public static boolean isNumeric(String str){
       try {
           Integer.parseInt(str);
           return true;
       } catch (Exception e) {
           return false;
       }
   }
    private void txSLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txSLActionPerformed

 
    }//GEN-LAST:event_txSLActionPerformed
    
    //set mã khuyến mãi
   
    private void txSLKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSLKeyPressed
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_txSLKeyPressed

    public HoaDonDTO getTF(){
        HoaDonDTO hd = new HoaDonDTO();
        hd.setNgay(new SimpleDateFormat("yyyy-MM-dd").format(txDate.getDate()));
        hd.setMaNV((String) cbMaNV.getSelectedItem());
        hd.setMaKH((String) cbMakh.getSelectedItem());
        hd.setMaHD(txMahd.getText());
        return hd;
    }
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        HoaDonDTO hd1 = getTF();
        
        int i= tbl1.getSelectedRow();
        if(i>=0){
            int res=JOptionPane.showConfirmDialog(rootPane, "Bạn muốn sửa hóa đơn này ?");
           if(res==JOptionPane.YES_OPTION){
            if(bus.suahd(hd1)){
                HoaDonDTO hd= bus.dochd().set(i, hd1);
                mode.setValueAt(hd1.getNgay(), i, 1);
                mode.setValueAt(hd1.getMaNV(), i, 3);
                mode.setValueAt(hd1.getMaKH(), i, 4);
                JOptionPane.showMessageDialog(rootPane, "Sửa thành công");
            }
            else
                JOptionPane.showMessageDialog(rootPane, "Sửa thất bại");
           }
        }         
    }//GEN-LAST:event_btnSuaActionPerformed

    
    private void btnSua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSua1ActionPerformed
  int k=bus1.SLCT(txMahd1.getText(),txMasp1.getText());
  int t=Integer.parseInt(txSL.getText());
        CT_Hoa_DonDTO ctd1 = getTF1();
        
        int i= tbl2.getSelectedRow();
        if(i>=0){
            int res=JOptionPane.showConfirmDialog(rootPane, "Bạn muốn sửa hóa đơn này ?");
           if(res==JOptionPane.YES_OPTION){
            if(bus1.suacthd(ctd1)){
                CT_Hoa_DonDTO ctd= bus1.doccthd().set(i, ctd1);
                mode1.setValueAt(ctd1.getSL(), i, 2);
                mode1.setValueAt(ctd1.getMaHD(), i, 0);
                mode1.setValueAt(ctd1.getMaSP(), i, 1);
                mode1.setValueAt(ctd1.getThanhTien(), i, 4);
                mode1.setValueAt(ctd1.getGiamGia(), i, 5);
                JOptionPane.showMessageDialog(rootPane, "Sửa thành công");
                TangGiamSL(t,k);
                suaTT();
                suaTTG();
                SuaMakm();
                suaTSG();
            }
            else
                JOptionPane.showMessageDialog(rootPane, "Sửa thất bại");
           }
        }    
    }//GEN-LAST:event_btnSua1ActionPerformed

    private void txTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txTTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txTTActionPerformed

    private void txSLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSLKeyReleased
        // TODO add your handling code here:
        int t=bus.SL(txMasp1.getText());
        float t1=bus1.gg(txMasp1.getText());
        if(isNumeric(txSL.getText())){
            int f=Integer.parseInt(txSL.getText());
            if(f<=t){
                try {
                    float re= (float)((Integer.parseInt(txSL.getText()))*(Float.parseFloat(txDG.getText())));
                    float re1= (float)((Integer.parseInt(txSL.getText()))*t1);
                    txTT.setText(String.valueOf(re));
                    txgg.setText(String.valueOf(re1));
                } catch (Exception e) {
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Số lượng không đủ");
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Số lượng phải là sô");
        }
    }//GEN-LAST:event_txSLKeyReleased

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        String find=JOptionPane.showInputDialog("Nhập mã hóa đơn");
        showSearchID(find);
       
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        // TODO add your handling code here:
        mode.setRowCount(0);
        docHD();
    }//GEN-LAST:event_btnShowActionPerformed

    private void txMahdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txMahdKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txMahdKeyReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        JTextField begin = new JTextField("",15);
         JTextField end = new JTextField("",15);
         end.setEditable(true);
         begin.setEditable(true);
         Object ob= new Object[]{"Tổng tiền từ",begin,"đến",end };
         JOptionPane.showMessageDialog(null,ob);
         showSearchTT(Float.parseFloat(begin.getText()), Float.parseFloat(end.getText()));
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        JDateChooser begin =  new com.toedter.calendar.JDateChooser();
        JDateChooser end =  new com.toedter.calendar.JDateChooser();
        Object ob= new Object[]{"Ngày từ",begin,"đến",end };
        JOptionPane.showMessageDialog(null,ob);
        showSearchNgay(new SimpleDateFormat("yyyy-MM-dd").format(begin.getDate()), new SimpleDateFormat("yyyy-MM-dd").format(end.getDate()));
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    
  
     public void showSearchID(String find){
        mode.setRowCount(0);
        for(HoaDonDTO hd: bus.timkiem(find.toLowerCase())){
            mode.addRow(new Object[]{
                hd.getMaHD(),hd.getNgay(),hd.getMaKM(),hd.getMaNV(),hd.getMaKH(),hd.getTongGiam(),hd.getTongTien(),hd.getSauGiam()
           });
        }
    }
     public void showSearchTT(float from,float to){
        mode.setRowCount(0);
        for(HoaDonDTO hd: bus.timKiemTheoTien(from,to)){
            mode.addRow(new Object[]{
                hd.getMaHD(),hd.getNgay(),hd.getMaKM(),hd.getMaNV(),hd.getMaKH(),hd.getTongGiam(),hd.getTongTien(),hd.getSauGiam()
           });
        }
    }
     
     public void showSearchNgay(String from,String to){
        mode.setRowCount(0);
        for(HoaDonDTO hd: bus.timKiemTheoNgay(from, to)){
            mode.addRow(new Object[]{
                hd.getMaHD(),hd.getNgay(),hd.getMaKM(),hd.getMaNV(),hd.getMaKH(),hd.getTongGiam(),hd.getTongTien(),hd.getSauGiam()
           });
        }
    }


//Show bảng hóa đơn
    public void docHD(){
        for(HoaDonDTO hd :bus.dochd()){
            mode.addRow(new Object[]{
                hd.getMaHD(),hd.getNgay(),hd.getMaKM(),hd.getMaNV(),hd.getMaKH(),hd.getTongGiam(),hd.getTongTien(),hd.getSauGiam()
            });
        }
    }
    
    //Show bảng chi tiết hóa đơn
    public void docCTHD(){
        for(CT_Hoa_DonDTO ctd:bus1.doccthd()){
            mode1.addRow(new Object[]{
                ctd.getMaHD(),ctd.getMaSP(),ctd.getSL(),ctd.getDonGia(),ctd.getThanhTien(),ctd.getGiamGia()
            });
        }
    }
    
    //Show bảng sản phẩm
    public void showsp(){
        for(SanPhamDTO sp :bus2.docsp() ){
        mode2.addRow(new Object[]{
            sp.getMaSP(),sp.getTenSP(),sp.getSoLuong(),sp.getDonGia()
        });
        }
    }

    //lấy dữ liệu lên combobox
    public void loadCb(){
        Vector cbMaNV=  bus.loadcombobox1();
        this.cbMaNV.setModel(new DefaultComboBoxModel<>(cbMaNV));
        Vector cbMaKH =bus.loadcombobox2();
        cbMakh.setModel(new DefaultComboBoxModel<>(cbMaKH));
    }
    
    public void showResult(){
        HoaDonDTO hd = bus.dshd.get(bus.dshd.size()-1);
          mode.addRow(new Object[]{
                hd.getMaHD(),hd.getNgay(),hd.getMaKM(),hd.getMaNV(),hd.getMaKH(),hd.getTongGiam(),hd.getTongTien(),hd.getSauGiam()
            });
    }
    public void doctbcthd(){
         mode1.setRowCount(0);
        for(CT_Hoa_DonDTO ctd: bus1.timKiemten(tbl1.getModel().getValueAt(tbl1.getSelectedRow(), 0).toString())){
            mode1.addRow(new Object[]{
                ctd.getMaHD(),ctd.getMaSP(),ctd.getSL(),ctd.getDonGia(),ctd.getThanhTien(),ctd.getGiamGia()
           });
        }
    }
    
    //lấy dữ liệu từ textfield
    public CT_Hoa_DonDTO getTF1(){
        CT_Hoa_DonDTO ctd= new CT_Hoa_DonDTO();
        ctd.setSL(Integer.parseInt(txSL.getText()));
        ctd.setMaHD(txMahd1.getText());
        ctd.setMaSP(txMasp1.getText());
        ctd.setGiamGia(Float.parseFloat(txgg.getText()));
        ctd.setThanhTien(Float.parseFloat(txTT.getText()));
        return ctd;
    }
    
    //set tiền giảm giá
     public void setMakh(){
        String res= table.getModel().getValueAt(table.getSelectedRow(), 0).toString();
   if(res.equals("SP039")||res.equals("SP067")||res.equals("SP071")||res.equals("SP074")||res.equals("SP079")||res.equals("SP081")||res.equals("SP086")||
           res.equals("SP087")||res.equals("SP089")||res.equals("SP090")||res.equals("SP091")||res.equals("SP095")||res.equals("SP096")||res.equals("SP099")||res.equals("SP100")){
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP039")){
            txgg.setText("5000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP067")){
            txgg.setText("10000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP071")){
            txgg.setText("10000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP074")){
            txgg.setText("5000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP079")){
            txgg.setText("5000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP081")){
            txgg.setText("10000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP086")){
            txgg.setText("15000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP087")){
            txgg.setText("5000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP089")){
            txgg.setText("5000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP090")){
            txgg.setText("10000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP091")){
            txgg.setText("10000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP095")){
            txgg.setText("15000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP096")){
            txgg.setText("15000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP099")){
            txgg.setText("15000");
        }
        if(table.getModel().getValueAt(table.getSelectedRow(), 0).toString().equals("SP100")){
            txgg.setText("15000");
        }
   }else{
        txgg.setText("0");
   }
    }
    
     //show dữ liệu cuối cùng của cthd
     public void showResult1(){
        CT_Hoa_DonDTO ctd = bus1.dscthd.get(bus1.dscthd.size()-1);
         mode1.addRow(new Object[]{
                ctd.getMaHD(),ctd.getMaSP(),ctd.getSL(),ctd.getDonGia(),ctd.getThanhTien(),ctd.getGiamGia()
            });
    }
     
     public void SuaMakm(){
         int i= tbl1.getSelectedRow();
        if(i>=0){
            HoaDonDTO hd= new HoaDonDTO();
            hd.setMaHD(txMahd.getText());
            float res=bus.TongTien(txMahd.getText());
            
         if(res>=40000 && res <100000){
             cbMakm.setSelectedIndex(1);
         }
         
         if(res>=100000 && res <200000){
             cbMakm.setSelectedIndex(2);
         }
         
         if(res>=200000 ){
             cbMakm.setSelectedIndex(3);
         }
            hd.setMaKM((String) cbMakm.getSelectedItem());
            if(bus.SuaMakm(hd)){
                HoaDonDTO old= bus.dochd().set(i, hd);
                mode.setValueAt(hd.getMaKM(), i, 2);
            }
        }     
     }
     
     //sửa tổng tiền giảm khi thêm
     public void suaTTG(){
         float temp=bus.TongGiam(txMahd.getText());
         float t= Float.parseFloat(txgg.getText());
        // float a= Float.parseFloat(txTT.getText())-Float.parseFloat(txgg.getText());
         float res=bus.TongTien(txMahd.getText())-t;
         if(res>=40000 &&  res<100000){
             temp=temp+10000+t;
         }
         
         if(res>=100000 && res <200000){
             temp=temp+30000+t;
         }
         
         if(res>=200000 ){
             temp=temp+60000+t;
         }
        int i=tbl1.getSelectedRow();
        if(i>=0){
            if(bus.SuaTTG(temp,txMahd.getText())){
        HoaDonDTO hd= new HoaDonDTO();
        hd.setTongGiam(temp);
        HoaDonDTO old= bus.dshd.set(i, hd);
        mode.setValueAt(hd.getTongGiam(), i, 5);
        }
        }
     }
    
     //Sửa tổng tiền sao khi thêm hoặc sửa
    public void suaTT(){
        //float temp=bus.TongTien(txMahd.getText());
       float t=Float.parseFloat(txgg.getText());
       //  float t= Float.parseFloat(txgg.getText());
          float temp=bus.TongTien(txMahd.getText());
       
        int i=tbl1.getSelectedRow();
        if(i>=0){
            if(bus.SuaTT(txMahd.getText(), temp)){
        HoaDonDTO hd= new HoaDonDTO();
        hd.setTongTien(temp);
        HoaDonDTO old= bus.dshd.set(i, hd);
        mode.setValueAt(hd.getTongTien(), i, 6);
        }
        }
    }
    
    //set số tiền sau khi giảm
    public void suaTSG(){
        //float temp=bus.TongTien(txMahd.getText());
       float t=bus.TienGiam(txMahd.getText());
       //  float t= Float.parseFloat(txgg.getText());
          float temp=bus.Tien(txMahd.getText());
          float gg=temp-t;
       
        int i=tbl1.getSelectedRow();
        if(i>=0){
            if(bus.SuaTSG(gg ,txMahd1.getText())){
        HoaDonDTO hd= new HoaDonDTO();
        hd.setSauGiam(gg);
        HoaDonDTO old= bus.dshd.set(i, hd);
        mode.setValueAt(hd.getSauGiam(), i, 7);
        }
        }
    }
    
    //giảm số lượng sản phẩm khi thêm chi tiết hóa đơn
     public void suaSL(){
         SanPhamDTO sp= new SanPhamDTO();
        int temp=bus.SL(txMasp1.getText());
        int sl=temp-Integer.parseInt(txSL.getText());
        int i=table.getSelectedRow();
        if(i>=0){
          if(bus.SuaSL(txMasp1.getText(), sl)){
        
        sp.setSoLuong(sl);
        SanPhamDTO old= bus2.dssp.set(i, sp);
        mode2.setValueAt(sp.getSoLuong(), i, 2);
        }
        }
    }
     
     
     
     //Tăng giảm số lượng sản phẩm
     public void TangGiamSL(int input,int avai){
         int temp=bus.SL(txMasp1.getText());
         if(input>avai){
        int i=tbl2.getSelectedRow();
        if(i>=0){
         int cl=input-avai;
         int sl=temp-cl;
        SanPhamDTO sp= new SanPhamDTO();
          if(bus.SuaSL(txMasp1.getText(), sl)){
        sp.setSoLuong(sl);
        mode2.setRowCount(0);
        showsp();
          } 
        }
     }
         if(input<avai){
        int i=tbl2.getSelectedRow();
        if(i>=0){
         int cl=avai-input;
         int sl=temp+cl;
        SanPhamDTO sp= new SanPhamDTO();
          if(bus.SuaSL(txMasp1.getText(), sl)){
        sp.setSoLuong(sl);
        mode2.setRowCount(0);
        showsp();
          } 
        }
     }
         }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDon_CTHoaDon_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDon_CTHoaDon_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDon_CTHoaDon_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDon_CTHoaDon_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDon_CTHoaDon_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnReset1;
    private javax.swing.JButton btnShow;
    private javax.swing.JButton btnShow1;
    private javax.swing.JButton btnShowsp;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSua1;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThem1;
    private javax.swing.JComboBox<String> cbMaNV;
    private javax.swing.JComboBox<String> cbMakh;
    private javax.swing.JComboBox<String> cbMakm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbCthd;
    private javax.swing.JLabel lbDG;
    private javax.swing.JLabel lbGG;
    private javax.swing.JLabel lbMaSP;
    private javax.swing.JLabel lbMahd;
    private javax.swing.JLabel lbMahd1;
    private javax.swing.JLabel lbMakh;
    private javax.swing.JLabel lbMakm;
    private javax.swing.JLabel lbManv;
    private javax.swing.JLabel lbNgay;
    private javax.swing.JLabel lbSL;
    private javax.swing.JLabel lbTT;
    private javax.swing.JLabel lbTiengiam;
    private javax.swing.JLabel lbTongTien;
    private javax.swing.JMenuBar mnBar1;
    private javax.swing.JMenu mnTim;
    private javax.swing.JPanel p1;
    private javax.swing.JPanel p2;
    private javax.swing.JPanel p4;
    private javax.swing.JPanel pn1;
    private javax.swing.JScrollPane scr1;
    public javax.swing.JTable table;
    private javax.swing.JTable tbl1;
    private javax.swing.JTable tbl2;
    public javax.swing.JTextField txDG;
    private com.toedter.calendar.JDateChooser txDate;
    private javax.swing.JTextField txMahd;
    private javax.swing.JTextField txMahd1;
    public javax.swing.JTextField txMasp1;
    private javax.swing.JTextField txSL;
    private javax.swing.JTextField txTT;
    private javax.swing.JTextField txTongGiam;
    private javax.swing.JTextField txTongTien;
    private javax.swing.JTextField txgg;
    // End of variables declaration//GEN-END:variables
}
